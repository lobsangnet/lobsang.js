# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
jobs:
  build:
    docker:
      - image: circleci/node:10.12
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules

  lerna:
    docker:
      - image: circleci/node:10.12

    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm run bootstrap

      - save_cache:
          key: v1-lerna-{{ checksum "package.json" }}
          paths:
            - node_modules
            - packages/**/node_modules

  test:
    docker:
      - image: circleci/node:10.12

    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-lerna-{{ checksum "package.json" }}
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # run tests!
      - run: npm run test && npm run codecov

      - store_artifacts:
          path: ~/repo/coverage
          destination: test-coverage

      - store_test_results:
          path: ~/repo/coverage

workflows:
  version: 2
  workflow:
    jobs:
      - build
      - test:
          context: Lobsang-SNYK_TOKEN
          requires:
            - build
